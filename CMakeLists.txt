# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS cmake.toml)
endif()

# vcpkg settings
set(VCPKG_OVERLAY_PORTS
	"${CMAKE_CURRENT_SOURCE_DIR}/vcpkg-overlay"
)
set(VCPKG_OVERLAY_TRIPLETS
	"${CMAKE_CURRENT_SOURCE_DIR}/vcpkg-overlay"
)
project(vcpkg_template)

if(CMKR_ROOT_PROJECT AND NOT CMKR_DISABLE_VCPKG)
	include(FetchContent)
	# Fix warnings about DOWNLOAD_EXTRACT_TIMESTAMP
	if(POLICY CMP0135)
		cmake_policy(SET CMP0135 NEW)
	endif()
	message(STATUS "Fetching vcpkg (2024.11.16)...")
	FetchContent_Declare(vcpkg
		URL
			"https://github.com/microsoft/vcpkg/archive/refs/tags/2024.11.16.tar.gz"
		SUBBUILD_DIR
			"CMakeFiles/vcpkg-subbuild"
		SOURCE_DIR
			vcpkg
		BINARY_DIR
			"CMakeFiles/vcpkg-build"
	)
	FetchContent_MakeAvailable(vcpkg)

	if(CMAKE_HOST_SYSTEM_NAME STREQUAL Darwin AND CMAKE_OSX_ARCHITECTURES STREQUAL "")
		set(CMAKE_OSX_ARCHITECTURES ${CMAKE_HOST_SYSTEM_PROCESSOR} CACHE STRING "" FORCE)
	endif()
	include("${vcpkg_SOURCE_DIR}/scripts/buildsystems/vcpkg.cmake")
endif()

# Packages
find_package(fmt REQUIRED)

find_package(unofficial-sqlite3 REQUIRED)

find_package(unofficial-mylib REQUIRED)

# Target: example
set(example_SOURCES
	cmake.toml
	"src/main.cpp"
)

add_executable(example)

target_sources(example PRIVATE ${example_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${example_SOURCES})

target_link_libraries(example PRIVATE
	fmt::fmt
	unofficial::sqlite3::sqlite3
	unofficial::mylib::mylib
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT example)
endif()
